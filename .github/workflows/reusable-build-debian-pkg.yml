name: Build debian package

on:
  workflow_call:
    inputs:
      application:
        required: true
        type: string
      version:
        required: true
        type: string
      arch:
        required: false
        type: string
    secrets:
      cf_token:
        required: false

jobs:
  build:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Download arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.application }}_${{ inputs.version }}_linux_arm64.tar.gz

      - name: Download amd64v2 artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.application }}_${{ inputs.version }}_linux_amd64v2.tar.gz
  
      - name: Debug 1
        run: |
          pwd
          ls -lao

      - name: Update and install required packages
        run: sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install -y dpkg-dev debhelper

      - name: clearing dpkg
        run: sudo dpkg --clear-avail

      - name: Extract archives
        run: |
          tar xzvf ${{ inputs.application }}_${{ inputs.version }}_linux_amd64v2.tar.gz
          #### mv -v ${{ inputs.application }}_${{ inputs.version }}_linux_amd64v2 ${{ inputs.application }}_${{ inputs.version }}_linux_amd64
          mv erigon_v3.0.0-alpha5_linux_amd64v2 ${{ inputs.application }}_${{ inputs.version }}_linux_amd64
          tar xzvf ${{ inputs.application }}_${{ inputs.version }}_linux_arm64.tar.gz
          mv erigon_v3.0.0-alpha5_linux_arm64 ${{ inputs.application }}_${{ inputs.version }}_linux_arm64

      # Creating directory structure
      # see https://www.debian.org/doc/debian-policy/ch-controlfields.html#version
      #     https://www.debian.org/doc/manuals/developers-reference/best-pkging-practices.html
      - name: Build debian package for amd64
        env:
          ARCH: "amd64"
        run: |
          export PARSED_VERSION=$(echo ${{ inputs.version }} | sed -e 's/^v//g')
          mkdir -p deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}/usr/bin \
                   deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}/DEBIAN
          cat <<-END  > deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}/DEBIAN/control
          Package: ${{ inputs.application }}
          Version: ${PARSED_VERSION}
          Section: misc
          Priority: optional
          Architecture: ${ARCH}
          Maintainer: Erigon DevOps [https://github.com/erigontech/erigon/issues]
          Description: Erigon - Ethereum implementation on the efficiency frontier
          Vcs-Git: https://github.com/erigontech/erigon.git
          Vcs-Browser: https://github.com/erigontech/erigon 
          END
          install -v -p ${{ inputs.application }}_${{ inputs.version }}_linux_${ARCH} \
                      deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}/usr/bin
          dpkg-deb --build --root-owner-group deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}

      - name: Build debian package for arm64
        env:
          ARCH: "arm64"
        run: |
          export PARSED_VERSION=$(echo ${{ inputs.version }} | sed -e 's/^v//g')
          mkdir -p deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}/usr/bin \
                    deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}/DEBIAN
          cat <<-END  > deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}/DEBIAN/control
          Package: ${{ inputs.application }}
          Version: ${PARSED_VERSION}
          Section: misc
          Priority: optional
          Architecture: ${ARCH}
          Maintainer: Erigon DevOps [https://github.com/erigontech/erigon/issues]
          Description: Erigon - Ethereum implementation on the efficiency frontier
          Vcs-Git: https://github.com/erigontech/erigon.git
          Vcs-Browser: https://github.com/erigontech/erigon 
          END
          install -v -p ${{ inputs.application }}_${{ inputs.version }}_linux_${ARCH} \
                      deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}/usr/bin
          dpkg-deb --build --root-owner-group deb-pkg/${{ inputs.application }}_${{ inputs.version }}_${ARCH}

      - name: debug -- exit
        run: |
          find . -name *.deb* -ls
          exit 1






      - name: copy the binary for amd64 over
        run: cp -rp build/bin/erigon packaging/deb/erigon/usr/bin/
      - name: create systemd directory for service file
        run: mkdir -p packaging/deb/erigon/lib/systemd/system
      - name: copy the erigon service file for systemd
        run: cp -rp packaging/package_scripts/erigon.service packaging/deb/erigon/lib/systemd/system/

      # Create control file and packaging
      - name: create control file
        run: |
          touch packaging/deb/erigon/DEBIAN/control
          echo "Package: erigon" >> packaging/deb/erigon/DEBIAN/control
          echo "Version: ${{ env.VERSION }}" >> packaging/deb/erigon/DEBIAN/control
          echo "Section: base" >> packaging/deb/erigon/DEBIAN/control
          echo "Priority: optional" >> packaging/deb/erigon/DEBIAN/control
          echo "Architecture: amd64" >> packaging/deb/erigon/DEBIAN/control
          echo "Maintainer: devops@polygon.technology" >> packaging/deb/erigon/DEBIAN/control
          echo "Description: erigon package" >> packaging/deb/erigon/DEBIAN/control
      - name: Creating package directory for binary for erigon ${{ env.ARCH }}
        run: cp -rp packaging/deb/erigon packaging/deb/erigon-${{ env.GIT_TAG }}-${{ env.ARCH }}
        env:
          ARCH: amd64
      - name: Running package build  for ${{ env.ARCH }}
        run: dpkg-deb --build --root-owner-group packaging/deb/erigon-${{ env.GIT_TAG }}-${{ env.ARCH }}
        env:
          ARCH: amd64

      # arm64 setup
      - name: prepping environment for arm64 build
        run: make clean

      - name: removing amd64 control file
        run: rm -rf packaging/deb/erigon/DEBIAN/control

      - name: Adding requirements for cross compile
        run: sudo apt-get install g++-aarch64-linux-gnu gcc-aarch64-linux-gnu

      - name: build for arm64
        run: GOARCH=arm64 GOOS=linux CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ CGO_ENABLED=1 go build -o build/bin/erigon ./cmd/erigon/main.go

      - name: Copying necessary files
        run: cp -rp build/bin/erigon packaging/deb/erigon/usr/bin/
      - name: create control file
        run: |
          touch packaging/deb/erigon/DEBIAN/control
          echo "Package: erigon" >> packaging/deb/erigon/DEBIAN/control
          echo "Version: ${{ env.VERSION }}" >> packaging/deb/erigon/DEBIAN/control
          echo "Section: base" >> packaging/deb/erigon/DEBIAN/control
          echo "Priority: optional" >> packaging/deb/erigon/DEBIAN/control
          echo "Architecture: arm64" >> packaging/deb/erigon/DEBIAN/control
          echo "Maintainer: devops@polygon.technology" >> packaging/deb/erigon/DEBIAN/control
          echo "Description: erigon package" >> packaging/deb/erigon/DEBIAN/control
      - name: Creating package directory for binary for erigon ${{ env.ARCH }}
        run: cp -rp packaging/deb/erigon packaging/deb/erigon-${{ env.GIT_TAG }}-${{ env.ARCH }}
        env:
          ARCH: arm64

      - name: Running package build for ${{ env.ARCH }}
        run: dpkg-deb --build --root-owner-group packaging/deb/erigon-${{ env.GIT_TAG }}-${{ env.ARCH }}
        env:
          ARCH: arm64

      - name: shasum the ${{ env.ARCH }} debian package
        run: cd packaging/deb/ && sha256sum erigon-${{ env.GIT_TAG }}-${{ env.ARCH }}.deb > erigon-${{ env.GIT_TAG }}-${{ env.ARCH }}.deb.checksum
        env:
          ARCH: amd64

      - name: shasum the ${{ env.ARCH }} debian package
        run: cd packaging/deb/ && sha256sum erigon-${{ env.GIT_TAG }}-${{ env.ARCH }}.deb > erigon-${{ env.GIT_TAG }}-${{ env.ARCH }}.deb.checksum
        env:
          ARCH: arm64

      # Confirm packages built and upload
      - name: Confirming package built
        run: ls -ltr packaging/deb/ | grep erigon

      - name: Release erigon Packages
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.GIT_TAG }}
          prerelease: true
          files: |
            packaging/deb/erigon**.deb
            packaging/deb/erigon**.deb.checksum